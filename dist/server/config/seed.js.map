{"version":3,"sources":["config/seed.js"],"names":["seedDatabaseIfNeeded","seedDB","find","remove","then","thing","create","title","description","deadline","month","day","year","points","console","log","catch","err","provider","role","name","email","password","submitted","phonenumber","wnumber","college","address","city","state","education","degree","branch","postal","pin","previous","social","fblink","questions","why","right","past"],"mappings":"AAAA;;;;;AAKA;;;;;kBAKwBA,oB;;AAJxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AACe,SAASA,oBAAT,GAAgC;AAC7C,MAAG,sBAAOC,MAAV,EAAkB;AAChB,mBAAKC,IAAL,CAAU,EAAV,EAAcC,MAAd,GACGC,IADH,CACQ,YAAM;AACV,UAAIC,QAAQ,eAAKC,MAAL,CAAY;AACtBC,eAAO,QADe;AAEtBC,qBAAa,yBAFS;AAGtBC,kBAAU;;AAERC,iBAAO,UAFC;AAGRC,eAAK,CAHG;AAIRC,gBAAM;AAJE,SAHY;AAStBC,gBAAQ;AATc,OAAZ,EAUV;AACAN,eAAO,QADP;AAEAC,qBAAa,0BAFb;AAGAC,kBAAU;AACRC,iBAAO,UADC;AAERC,eAAK,CAFG;AAGRC,gBAAM;AAHE,SAHV;AAQAC,gBAAQ;AARR,OAVU,CAAZ;AAoBA,aAAOR,KAAP;AACD,KAvBH,EAwBCD,IAxBD,CAwBM;AAAA,aAAMU,QAAQC,GAAR,CAAY,2BAAZ,CAAN;AAAA,KAxBN,EAyBCC,KAzBD,CAyBO;AAAA,aAAOF,QAAQC,GAAR,CAAY,wBAAZ,EAAsCE,GAAtC,CAAP;AAAA,KAzBP;;AA2BA,mBAAKf,IAAL,CAAU,EAAV,EAAcC,MAAd,GACGC,IADH,CACQ,YAAM;AACV,qBAAKE,MAAL,CAAY;AACVY,kBAAU,OADA;AAEVC,cAAM,OAFI;AAGVC,cAAM,OAHI;AAIVC,eAAO,mBAJG;AAKVC,kBAAU;AALA,OAAZ,EAOE;AACEF,cAAM,OADR;AAEEC,eAAO,gBAFT;AAGEE,mBAAW,IAHb;AAIEJ,cAAM,MAJR;AAKEG,kBAAU,OALZ;AAMEE,qBAAa,UANf;AAOEC,iBAAS,UAPX;AAQEC,iBAAS;AACPN,gBAAM,gBADC;AAEPO,mBAAS,yBAFF;AAGPC,gBAAM,sBAHC;AAIPC,iBAAO;AAJA,SARX;AAcEC,mBAAW;AACTC,kBAAQ,eADC;AAETC,kBAAQ,eAFC;AAGTpB,gBAAM;AAHG,SAdb;AAmBEqB,gBAAQ;AACNN,mBAAS,gBADH;AAENC,gBAAM,aAFA;AAGNC,iBAAO,cAHD;AAINK,eAAK;AAJC,SAnBV;AAyBEC,kBAAU,KAzBZ;AA0BEC,gBAAQ,kBA1BV;AA2BEC,gBAAQ,EA3BV;AA4BEC,mBAAW;AACTC,eAAK,sDADI;AAETC,iBAAO,oCAFE;AAGTC,gBAAM;AAHG;AA5Bb,OAPF,EAyCCrC,IAzCD,CAyCM;AAAA,eAAMU,QAAQC,GAAR,CAAY,2BAAZ,CAAN;AAAA,OAzCN,EA0CCC,KA1CD,CA0CO;AAAA,eAAOF,QAAQC,GAAR,CAAY,wBAAZ,EAAsCE,GAAtC,CAAP;AAAA,OA1CP;AA2CD,KA7CH;AA8CD;AACF","file":"seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\nimport Thing from '../api/thing/thing.model';\nimport User from '../api/user/user.model';\nimport config from './environment/';\nimport Task from  '../api/task/task.model';\nexport default function seedDatabaseIfNeeded() {\n  if(config.seedDB) {\n    Task.find({}).remove()\n      .then(() => {\n        let thing = Task.create({\n          title: 'Task-1',\n          description: 'This is the first task!',\n          deadline: {\n\n            month: \"November\",\n            day: 5,\n            year: 2018\n          },\n          points: 10\n        },{\n          title: \"Task-2\",\n          description: \"This is the second task!\",\n          deadline: {\n            month: \"December\",\n            day: 6,\n            year: 2019\n          },\n          points: 10\n        });\n        return thing;\n      })\n    .then(() => console.log('finished populating tasks'))\n    .catch(err => console.log('error populating tasks', err));\n\n    User.find({}).remove()\n      .then(() => {\n        User.create({\n          provider: 'local',\n          role: 'admin',\n          name: 'Admin',\n          email: 'admin@example.com',\n          password: 'admin'\n        },\n          {\n            name: 'Daren',\n            email: 'daren@mail.com',\n            submitted: true,\n            role: 'user',\n            password: 'daren',\n            phonenumber: 7892340982,\n            wnumber: 7892340982,\n            college: {\n              name: 'Darens College',\n              address: 'Darens Colleges Address',\n              city: 'Darens Colleges city',\n              state: 'city!'\n            },\n            education: {\n              degree: 'Darens degree',\n              branch: 'Darens branch',\n              year: 'year!'\n            },\n            postal: {\n              address: 'Darens address',\n              city: 'Darens city',\n              state: 'Darens state',\n              pin: 'pin!'\n            },\n            previous: false,\n            social: 'Darens social!!!',\n            fblink: '',\n            questions: {\n              why: 'Getting famous and also no age restriction so ...!!!',\n              right: 'Even I dont know  what this means!',\n              past: 'I was born yesterday'\n            }\n          })\n        .then(() => console.log('finished populating users'))\n        .catch(err => console.log('error populating users', err));\n      });\n  }\n}\n"]}